import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy import select

from database.db import AsyncSessionLocal
from database.models import User, GoogleSheet
from utils.google_sheets import GoogleSheetsClient

router = Router()
logger = logging.getLogger(__name__)

class GoogleSheetStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è Google –¢–∞–±–ª–∏—Ü—ã"""
    waiting_for_url = State()
    waiting_for_sheet_name = State()
    waiting_for_interval = State()

@router.message(lambda m: m.text == "–¢–∞–±–ª–∏—Ü—ã")
async def sheets_menu(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–µ–Ω—é Google –¢–∞–±–ª–∏—Ü."""
    logger.info("Entering sheets_menu function")
    user_id = message.from_user.id
    
    try:
        async with AsyncSessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_q = select(User).filter(User.user_id == user_id)
            user_result = await session.execute(user_q)
            user = user_result.scalar_one_or_none()
            
            if not user or not user.current_chat_id:
                await message.answer(
                    "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É –¥–ª—è —Ä–∞–±–æ—Ç—ã.\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é."
                )
                return
            
            channel_id = user.current_chat_id
            
            # –ü–†–ò–ù–¶–ò–ü–ò–ê–õ–¨–ù–û –ù–û–í–´–ô –ü–û–î–•–û–î: 
            # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            base_message = "üìä <b>Google –¢–∞–±–ª–∏—Ü—ã</b>\n\n"
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ê–ö–¢–ò–í–ù–´–ï —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            sheets_q = select(GoogleSheet).filter(
                GoogleSheet.chat_id == channel_id,
                GoogleSheet.is_active == True
            )
            sheets_result = await session.execute(sheets_q)
            active_sheets = sheets_result.scalars().all()
            
            # –Ø–≤–Ω–æ —Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü
            sheet_count = len(active_sheets)
            
            # –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            logger.info(f"Channel ID: {channel_id}, active sheets count: {sheet_count}")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è —Ç–∞–±–ª–∏—Ü
            if sheet_count > 0:
                # –ï—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
                sheets_text = "\n".join([
                    f"{i+1}. –¢–∞–±–ª–∏—Ü–∞ {sheet.spreadsheet_id[:15]}... "
                    f"(–ª–∏—Å—Ç: {sheet.sheet_name}, "
                    f"–ø–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {sheet.last_sync.strftime('%d.%m.%Y %H:%M') if sheet.last_sync else '–Ω–∏–∫–æ–≥–¥–∞'})"
                    for i, sheet in enumerate(active_sheets)
                ])
                
                # –ö–æ–º–±–∏–Ω–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                full_message = base_message + sheets_text + "\n\n" + \
                              "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ."
                
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –° –∫–Ω–æ–ø–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
                keyboard = [
                    [
                        InlineKeyboardButton(
                            text="üóë –£–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É", 
                            callback_data=f"delete_sheet:{active_sheets[0].id}"
                        ),
                        InlineKeyboardButton(
                            text="üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å", 
                            callback_data="sync_sheets_now"
                        )
                    ],
                    [
                        InlineKeyboardButton(
                            text="‚ûï –ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É", 
                            callback_data="sheet_connect"
                        )
                    ]
                ]
                
                logger.info("Created keyboard WITH sync button - sheets found")
                
            else:
                # –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
                full_message = base_message + "–£ —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü.\n\n" + \
                              "–ß—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addsheet.\n\n" + \
                              "<i>–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:</i>\n" + \
                              "1. –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –≤ Google Sheets\n" + \
                              "2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–æ—Å—Ç—É–ø –¥–ª—è —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –±–æ—Ç–∞\n" + \
                              "3. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å URL —Ç–∞–±–ª–∏—Ü—ã"
                
                # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ë–ï–ó –∫–Ω–æ–ø–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
                keyboard = [
                    [
                        InlineKeyboardButton(
                            text="‚ûï –ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É", 
                            callback_data="sheet_connect"
                        )
                    ]
                ]
                
                logger.info("Created keyboard WITHOUT sync button - no sheets found")
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            markup = InlineKeyboardMarkup(inline_keyboard=keyboard)
            await message.answer(full_message, parse_mode="HTML", reply_markup=markup)
            
    except Exception as e:
        logger.error(f"Error showing sheets menu: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–∞–±–ª–∏—Ü–∞—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
@router.callback_query(lambda c: c.data.startswith("delete_sheet:"))
async def delete_sheet_callback(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ –∫–æ–ª–ª–±—ç–∫"""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã –∏–∑ callback_data
        sheet_id = int(call.data.split(":")[1])
        
        async with AsyncSessionLocal() as session:
            # –ù–∞—Ö–æ–¥–∏–º —Ç–∞–±–ª–∏—Ü—É –ø–æ ID
            sheet = await session.get(GoogleSheet, sheet_id)
            
            if not sheet:
                await call.answer("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", show_alert=True)
                return
            
            chat_id = sheet.chat_id  # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ (–≤–ª–∞–¥–µ–ª–µ—Ü –∏–ª–∏ –∞–¥–º–∏–Ω)
            user_id = call.from_user.id
            if sheet.created_by != user_id:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
                user_q = select(User).filter(User.user_id == user_id)
                user_result = await session.execute(user_q)
                user = user_result.scalar_one_or_none()
                
                if not user or user.role != "admin":
                    await call.answer("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —ç—Ç–æ–π —Ç–∞–±–ª–∏—Ü—ã", show_alert=True)
                    return
            
            # –ü–æ–º–µ—á–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∫–∞–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—É—é (–º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ)
            sheet.is_active = False
            await session.commit()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
            await call.answer("‚úÖ –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞", show_alert=False)
            
            # –í–ê–ñ–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
            sheets_q = select(GoogleSheet).filter(
                GoogleSheet.chat_id == chat_id,
                GoogleSheet.is_active == True
            )
            sheets_result = await session.execute(sheets_q)
            active_sheets = sheets_result.scalars().all()
            active_count = len(active_sheets)
            
            logger.info(f"After deletion: {active_count} active sheets remain for channel {chat_id}")
            
            if active_count > 0:
                # –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –¥—Ä—É–≥–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö —Å –∫–Ω–æ–ø–∫–∞–º–∏
                sheets_text = "\n".join([
                    f"{i+1}. –¢–∞–±–ª–∏—Ü–∞ {s.spreadsheet_id[:15]}... "
                    f"(–ª–∏—Å—Ç: {s.sheet_name}, "
                    f"–ø–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {s.last_sync.strftime('%d.%m.%Y %H:%M') if s.last_sync else '–Ω–∏–∫–æ–≥–¥–∞'})"
                    for i, s in enumerate(active_sheets)
                ])
                
                # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –∏–∑ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ç–∞–±–ª–∏—Ü
                first_sheet = active_sheets[0]
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∫–∞–∑—ã–≤–∞—è –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —Ç–∞–±–ª–∏—Ü—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                await call.message.edit_text(
                    f"üìä <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ Google –¢–∞–±–ª–∏—Ü—ã</b>\n\n"
                    f"{sheets_text}\n\n"
                    f"–¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –¥–æ—Å—Ç—É–ø–Ω—ã.",
                    parse_mode="HTML",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [
                            InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É", callback_data=f"delete_sheet:{first_sheet.id}"),
                            InlineKeyboardButton(text="üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å", callback_data="sync_sheets_now")
                        ],
                        [InlineKeyboardButton(text="‚ûï –ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É", callback_data="sheet_connect")]
                    ])
                )
            else:
                # –ï—Å–ª–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
                await call.message.edit_text(
                    "üìä <b>Google –¢–∞–±–ª–∏—Ü—ã</b>\n\n"
                    "–¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞. –£ –∫–∞–Ω–∞–ª–∞ –±–æ–ª—å—à–µ –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü.\n\n"
                    "–ß—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addsheet.",
                    parse_mode="HTML",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(text="‚ûï –ü–æ–¥–∫–ª—é—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É", callback_data="sheet_connect")]
                    ])
                )
                
    except Exception as e:
        logger.error(f"Error deleting sheet: {e}")
        await call.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã", show_alert=True)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ–ª–ª–±—ç–∫–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–æ–ª—å–∫–æ —Å Google Sheets
@router.callback_query(lambda c: c.data in ["sheet_connect", "add_sheet"])
async def sheets_add_callback(call: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–ª–ª–±—ç–∫–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã."""
    logger.info(f"Sheet add callback received: {call.data}")
    await handle_add_sheet_callback(call, state)

@router.callback_query(F.data == "sync_sheets_now")
async def sync_sheets_now_callback(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–ª–ª–±—ç–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü."""
    logger.info(f"Sync sheets callback received: {call.data}")
    
    # –ö–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    user_id = call.from_user.id
    
    try:
        async with AsyncSessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_q = select(User).filter(User.user_id == user_id)
            user_result = await session.execute(user_q)
            user = user_result.scalar_one_or_none()
            
            if not user or not user.current_chat_id:
                await call.answer("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É", show_alert=True)
                return
            
            channel_id = user.current_chat_id
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            sheets_q = select(GoogleSheet).filter(GoogleSheet.chat_id == channel_id, GoogleSheet.is_active == True)
            sheets_result = await session.execute(sheets_q)
            sheets = sheets_result.scalars().all()
            
            if not sheets:
                await call.answer("‚ö†Ô∏è –£ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ Google –¢–∞–±–ª–∏—Ü–∞–º", show_alert=True)
                return
            
            # –°–æ–æ–±—â–∞–µ–º –æ –Ω–∞—á–∞–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
            await call.answer("üîÑ –ù–∞—á–∏–Ω–∞—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...", show_alert=False)
            status_message = await call.message.answer("üîÑ –ù–∞—á–∏–Ω–∞—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Ç–∞–±–ª–∏—Ü...")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
            from scheduler import check_google_sheets
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∞–±–ª–∏—Ü
            await check_google_sheets(call.bot)
            
            # –°–æ–æ–±—â–∞–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
            await status_message.edit_text("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
    except Exception as e:
        logger.error(f"Error syncing sheets: {e}")
        await call.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏", show_alert=True)
        await call.message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü: {str(e)}")

async def handle_add_sheet_callback(call: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã"""
    logger.info("Processing add_sheet/sheet_connect callback")
    
    user_id = call.from_user.id
    
    try:
        async with AsyncSessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_q = select(User).filter(User.user_id == user_id)
            user_result = await session.execute(user_q)
            user = user_result.scalar_one_or_none()
            
            if not user or not user.current_chat_id:
                await call.answer("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É", show_alert=True)
                return
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–Ω–∞–ª –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
            await state.update_data(sheet_channel_id=user.current_chat_id)
            
            instructions_text = (
                "üìä <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Google –¢–∞–±–ª–∏—Ü—ã</b>\n\n"
                "–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n\n"
                "1. –°–æ–∑–¥–∞–π—Ç–µ <b>–ø—É—Å—Ç—É—é</b> —Ç–∞–±–ª–∏—Ü—É –≤ Google Sheets\n"
                "2. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–æ—Å—Ç—É–ø –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–º—É email:\n"
                f"<code>{GoogleSheetsClient.SERVICE_ACCOUNT}</code>\n\n"
                "3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ URL —Ç–∞–±–ª–∏—Ü—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                "https://docs.google.com/spreadsheets/d/SPREADSHEET_ID/edit\n\n"
                "<i>–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É: –ª–∏—Å—Ç—ã '–ö–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω' –∏ '–ò—Å—Ç–æ—Ä–∏—è' "
                "—Å –Ω—É–∂–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ —Å—Ç–æ–ª–±—Ü–æ–≤.</i>"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–ª–ª–±—ç–∫
            await call.answer()
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
            await call.message.answer(
                text=instructions_text,
                parse_mode="HTML"
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è URL
            await state.set_state(GoogleSheetStates.waiting_for_url)
            
    except Exception as e:
        logger.error(f"Error in handle_add_sheet_callback: {e}")
        await call.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã", show_alert=True)

@router.message(Command('addsheet'))
async def add_sheet_command(message: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É."""
    logger.info("Received addsheet command")
    user_id = message.from_user.id
    
    try:
        async with AsyncSessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_q = select(User).filter(User.user_id == user_id)
            user_result = await session.execute(user_q)
            user = user_result.scalar_one_or_none()
            
            if not user or not user.current_chat_id:
                await message.answer(
                    "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É –¥–ª—è —Ä–∞–±–æ—Ç—ã.\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é."
                )
                return
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–Ω–∞–ª –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
            await state.update_data(sheet_channel_id=user.current_chat_id)
            
            instructions_text = (
                "üìä <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Google –¢–∞–±–ª–∏—Ü—ã</b>\n\n"
                "–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:\n\n"
                "1. –°–æ–∑–¥–∞–π—Ç–µ <b>–ø—É—Å—Ç—É—é</b> —Ç–∞–±–ª–∏—Ü—É –≤ Google Sheets\n"
                "2. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–æ—Å—Ç—É–ø –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–º—É email:\n"
                f"<code>{GoogleSheetsClient.SERVICE_ACCOUNT}</code>\n\n"
                "3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ URL —Ç–∞–±–ª–∏—Ü—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                "https://docs.google.com/spreadsheets/d/SPREADSHEET_ID/edit\n\n"
                "<i>–ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É: –ª–∏—Å—Ç—ã '–ö–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω' –∏ '–ò—Å—Ç–æ—Ä–∏—è' "
                "—Å –Ω—É–∂–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ —Å—Ç–æ–ª–±—Ü–æ–≤.</i>"
            )
            
            await message.answer(
                text=instructions_text,
                parse_mode="HTML"
            )
            
            await state.set_state(GoogleSheetStates.waiting_for_url)
            
    except Exception as e:
        logger.error(f"Error starting add sheet process: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@router.message(Command('syncsheet'))
async def sync_sheet_command(message: Message):
    """–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É"""
    user_id = message.from_user.id
    
    try:
        async with AsyncSessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_q = select(User).filter(User.user_id == user_id)
            user_result = await session.execute(user_q)
            user = user_result.scalar_one_or_none()
            
            if not user or not user.current_chat_id:
                await message.answer(
                    "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É –¥–ª—è —Ä–∞–±–æ—Ç—ã.\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é."
                )
                return
            
            channel_id = user.current_chat_id
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            sheets_q = select(GoogleSheet).filter(GoogleSheet.chat_id == channel_id, GoogleSheet.is_active == True)
            sheets_result = await session.execute(sheets_q)
            sheets = sheets_result.scalars().all()
            
            if not sheets:
                await message.answer("‚ö†Ô∏è –£ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ Google –¢–∞–±–ª–∏—Ü–∞–º.")
                return
            
            # –°–æ–æ–±—â–∞–µ–º –æ –Ω–∞—á–∞–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
            status_message = await message.answer("üîÑ –ù–∞—á–∏–Ω–∞—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Ç–∞–±–ª–∏—Ü...")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
            from scheduler import check_google_sheets
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∞–±–ª–∏—Ü
            await check_google_sheets(message.bot)
            
            # –°–æ–æ–±—â–∞–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
            await status_message.edit_text("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            
    except Exception as e:
        logger.error(f"Error syncing sheets: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü: {str(e)}")

@router.message(GoogleSheetStates.waiting_for_url)
async def process_sheet_url(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ URL —Ç–∞–±–ª–∏—Ü—ã."""
    url = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç URL
    if "docs.google.com/spreadsheets/d/" not in url:
        await message.answer(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL Google –¢–∞–±–ª–∏—Ü—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "https://docs.google.com/spreadsheets/d/SPREADSHEET_ID/edit"
        )
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
    spreadsheet_id = url.split("/d/")[1].split("/")[0]
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ç–∞–±–ª–∏—Ü—ã
    await state.update_data(spreadsheet_id=spreadsheet_id)
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
    status_message = await message.answer("üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ –∏ —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ –∏ —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    try:
        sheets_client = GoogleSheetsClient()
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ
            metadata = sheets_client.service.spreadsheets().get(spreadsheetId=spreadsheet_id).execute()
            
            # –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø –µ—Å—Ç—å, —Å–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            await status_message.edit_text("üîÑ –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–ª—É—á–µ–Ω. –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É...")
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            if sheets_client.create_sheet_structure(spreadsheet_id):
                # –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                sheet_name = "–ö–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
                await state.update_data(sheet_name=sheet_name)
                
                await status_message.edit_text(
                    f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\n\n"
                    f"–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –ª–∏—Å—Ç—ã '–ö–æ–Ω—Ç–µ–Ω—Ç-–ø–ª–∞–Ω' –∏ '–ò—Å—Ç–æ—Ä–∏—è'.\n"
                    f"–í –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–±–æ—á–µ–≥–æ –ª–∏—Å—Ç–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è '{sheet_name}'.\n\n"
                    f"–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö (–∫–∞–∫ —á–∞—Å—Ç–æ –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–∞–±–ª–∏—Ü—É).\n"
                    f"–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: 15 –º–∏–Ω—É—Ç.\n\n"
                    f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —á–∏—Å–ª–æ –æ—Ç 5 –¥–æ 120 –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ /default –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
                )
                
                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º —Å—Ä–∞–∑—É –∫ —É–∫–∞–∑–∞–Ω–∏—é –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
                await state.set_state(GoogleSheetStates.waiting_for_interval)
            else:
                await status_message.edit_text(
                    "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
                )
                
        except Exception as sheet_error:
            error_message = str(sheet_error)
            logger.error(f"Error accessing sheet: {error_message}")
            
            if "forbidden" in error_message.lower() or "permission" in error_message.lower():
                await status_message.edit_text(
                    f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: —É –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–µ–π.\n\n"
                    f"–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –¥–æ—Å—Ç—É–ø –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è email-–∞–¥—Ä–µ—Å—É:\n"
                    f"<code>{GoogleSheetsClient.SERVICE_ACCOUNT}</code>\n\n"
                    f"–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥—É—é —Ç–∞–±–ª–∏—Ü—É."
                )
            else:
                await status_message.edit_text(
                    f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ç–∞–±–ª–∏—Ü–µ–π:\n\n"
                    f"{error_message[:200]}...\n\n"
                    f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥—É—é —Ç–∞–±–ª–∏—Ü—É."
                )
        
    except Exception as e:
        logger.error(f"Error in sheet URL processing: {e}")
        await status_message.edit_text(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ URL —Ç–∞–±–ª–∏—Ü—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

@router.message(GoogleSheetStates.waiting_for_interval)
async def process_sync_interval(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏."""
    interval_text = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if interval_text == "/default":
        interval = 15
    else:
        try:
            interval = int(interval_text)
            if interval < 5 or interval > 120:
                await message.answer(
                    "‚ùå –ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 5 –¥–æ 120 –º–∏–Ω—É—Ç.\n"
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /default –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (15 –º–∏–Ω—É—Ç)."
                )
                return
        except ValueError:
            await message.answer(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /default –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (15 –º–∏–Ω—É—Ç)."
            )
            return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_data = await state.get_data()
    spreadsheet_id = user_data.get("spreadsheet_id")
    sheet_name = user_data.get("sheet_name")
    channel_id = user_data.get("sheet_channel_id")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ –ë–î
    try:
        async with AsyncSessionLocal() as session:
            new_sheet = GoogleSheet(
                chat_id=channel_id,
                spreadsheet_id=spreadsheet_id,
                sheet_name=sheet_name,
                sync_interval=interval,
                created_by=message.from_user.id
            )
            
            session.add(new_sheet)
            await session.commit()
            
            await message.answer(
                f"üéâ Google –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞!\n\n"
                f"<b>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</b>\n"
                f"- ID —Ç–∞–±–ª–∏—Ü—ã: {spreadsheet_id}\n"
                f"- –õ–∏—Å—Ç: {sheet_name}\n"
                f"- –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {interval} –º–∏–Ω—É—Ç\n\n"
                f"–ë–æ—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ç–∞–±–ª–∏—Ü—É –∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç—ã –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é.\n"
                f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /syncsheet –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏.",
                parse_mode="HTML"
            )
            
            # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            await state.clear()
            
    except Exception as e:
        logger.error(f"Error saving sheet data: {e}")
        await message.answer(
            f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}\n\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        await state.clear()

@router.message(Command('removesheet'))
async def remove_sheet(message: Message):
    """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google –¢–∞–±–ª–∏—Ü–µ"""
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    args = message.text.split()
    if len(args) != 2:
        await message.answer(
            "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /removesheet [–Ω–æ–º–µ—Ä]\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: /removesheet 1"
        )
        return
    
    try:
        sheet_number = int(args[1])
        if sheet_number < 1:
            raise ValueError("Sheet number must be positive")
    except ValueError:
        await message.answer("‚ö†Ô∏è –ù–æ–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º.")
        return
    
    try:
        async with AsyncSessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_q = select(User).filter(User.user_id == user_id)
            user_result = await session.execute(user_q)
            user = user_result.scalar_one_or_none()
            
            if not user or not user.current_chat_id:
                await message.answer(
                    "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É –¥–ª—è —Ä–∞–±–æ—Ç—ã.\n"
                    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–°–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é."
                )
                return
            
            channel_id = user.current_chat_id
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            sheets_q = select(GoogleSheet).filter(GoogleSheet.chat_id == channel_id).order_by(GoogleSheet.id)
            sheets_result = await session.execute(sheets_q)
            sheets = sheets_result.scalars().all()
            
            if not sheets:
                await message.answer("‚ö†Ô∏è –£ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü.")
                return
            
            if sheet_number > len(sheets):
                await message.answer(f"‚ö†Ô∏è –£ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —Ç–æ–ª—å–∫–æ {len(sheets)} –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü.")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            sheet_to_remove = sheets[sheet_number - 1]
            
            # –ü–æ–º–µ—á–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∫–∞–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—É—é (–º—è–≥–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ)
            sheet_to_remove.is_active = False
            await session.commit()
            
            await message.answer(
                f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ {sheet_to_remove.spreadsheet_id[:15]}... —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞.\n\n"
                f"–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addsheet"
            )
            
    except Exception as e:
        logger.error(f"Error removing sheet: {e}")
        await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –°–ª—É–∂–µ–±–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
@router.message(Command('fix_sheets'))
async def fix_sheets_command(message: Message):
    """–°–ª—É–∂–µ–±–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏"""
    await fix_db_sheets(message)

async def fix_db_sheets(message: Message):
    """–°–ª—É–∂–µ–±–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π –≤ –ë–î —Ç–∞–±–ª–∏—Ü"""
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    async with AsyncSessionLocal() as session:
        user_q = select(User).filter(User.user_id == user_id, User.role == "admin")
        user_result = await session.execute(user_q)
        user = user_result.scalar_one_or_none()
        
        if not user:
            await message.answer("‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Ç–∞–±–ª–∏—Ü –≤ –ë–î
        sheets_q = select(GoogleSheet)
        sheets_result = await session.execute(sheets_q)
        all_sheets = sheets_result.scalars().all()
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞
        total_sheets = len(all_sheets)
        active_sheets = len([s for s in all_sheets if s.is_active])
        inactive_sheets = total_sheets - active_sheets
        
        await message.answer(
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü –≤ –ë–î:</b>\n\n"
            f"–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total_sheets}\n"
            f"–ê–∫—Ç–∏–≤–Ω—ã—Ö: {active_sheets}\n"
            f"–ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: {inactive_sheets}\n",
            parse_mode="HTML"
        )
        
        # –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ –∫–∞–Ω–∞–ª–∞–º
        channels_dict = {}
        for sheet in all_sheets:
            if sheet.chat_id not in channels_dict:
                channels_dict[sheet.chat_id] = {"active": 0, "inactive": 0}
            
            if sheet.is_active:
                channels_dict[sheet.chat_id]["active"] += 1
            else:
                channels_dict[sheet.chat_id]["inactive"] += 1
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–Ω–∞–ª–∞–º
        channels_info = []
        for chat_id, stats in channels_dict.items():
            try:
                group_q = select(Group).filter(Group.chat_id == chat_id)
                group_result = await session.execute(group_q)
                group = group_result.scalar_one_or_none()
                name = group.title if group else f"–ö–∞–Ω–∞–ª #{chat_id}"
                channels_info.append(
                    f"- {name}: –∞–∫—Ç–∏–≤–Ω—ã—Ö {stats['active']}, –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö {stats['inactive']}"
                )
            except Exception as e:
                logger.error(f"Error getting channel info: {e}")
                channels_info.append(
                    f"- –ö–∞–Ω–∞–ª #{chat_id}: –∞–∫—Ç–∏–≤–Ω—ã—Ö {stats['active']}, –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö {stats['inactive']}"
                )
        
        if channels_info:
            await message.answer(
                f"üìà <b>–¢–∞–±–ª–∏—Ü—ã –ø–æ –∫–∞–Ω–∞–ª–∞–º:</b>\n\n" + "\n".join(channels_info),
                parse_mode="HTML"
            )
            
            # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–∏–∑—Ä–∞—á–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏
            if active_sheets > 0:
                await message.answer(
                    "–•–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Ç–∞–±–ª–∏—Ü? –≠—Ç–æ —Ä–µ—à–∏—Ç –ø—Ä–æ–±–ª–µ–º—É —Å '–ø—Ä–∏–∑—Ä–∞—á–Ω—ã–º–∏' —Ç–∞–±–ª–∏—Ü–∞–º–∏.",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å –≤—Å–µ", callback_data="fix_sheets_confirm")],
                        [InlineKeyboardButton(text="‚ùå –ù–µ—Ç, –Ω–µ —É–¥–∞–ª—è—Ç—å", callback_data="fix_sheets_cancel")]
                    ])
                )

@router.callback_query(lambda c: c.data == "fix_sheets_confirm")
async def fix_sheets_confirm(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π —Ç–∞–±–ª–∏—Ü"""
    try:
        async with AsyncSessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Ç–∞–±–ª–∏—Ü
            sheets_q = select(GoogleSheet).filter(GoogleSheet.is_active == True)
            sheets_result = await session.execute(sheets_q)
            active_sheets = sheets_result.scalars().all()
            
            count = len(active_sheets)
            
            # –ü–æ–º–µ—á–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –∫–∞–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ
            for sheet in active_sheets:
                sheet.is_active = False
            
            await session.commit()
            
            await call.message.edit_text(
                f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π —Ç–∞–±–ª–∏—Ü.\n\n"
                f"–¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –º–µ–Ω—é '–¢–∞–±–ª–∏—Ü—ã' —É –∫–∞–Ω–∞–ª–æ–≤ –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü "
                f"–Ω–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞ '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å'."
            )
            
    except Exception as e:
        logger.error(f"Error fixing sheets: {e}")
        await call.message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π: {e}")

@router.callback_query(lambda c: c.data == "fix_sheets_cancel")
async def fix_sheets_cancel(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π —Ç–∞–±–ª–∏—Ü"""
    await call.message.edit_text("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –ó–∞–ø–∏—Å–∏ —Ç–∞–±–ª–∏—Ü –Ω–µ –∏–∑–º–µ–Ω–µ–Ω—ã.")
