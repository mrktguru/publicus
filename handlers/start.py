# handlers/start.py
import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from sqlalchemy import select

from database.db import AsyncSessionLocal
from database.models import User, Group
from config import DEFAULT_ADMIN_ID

router = Router()
logger = logging.getLogger(__name__)

@router.message(Command('start'))
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id
    
    try:
        async with AsyncSessionLocal() as session:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–∞–∑–µ
            user_q = select(User).filter(User.user_id == user_id)
            user_result = await session.execute(user_q)
            existing_user = user_result.scalar_one_or_none()
            
            if existing_user:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–Ω–∞–ª—ã
                channels_q = select(Group).filter(Group.added_by == user_id)
                channels_result = await session.execute(channels_q)
                channels = channels_result.scalars().all()
                
                if channels:
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–∞–Ω–∞–ª—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∏—Ö –≤—ã–±–æ—Ä–∞
                    await message.answer(
                        f"üìù <b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É –¥–ª—è —Ä–∞–±–æ—Ç—ã</b>\n\n"
                        f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø/–∫–∞–Ω–∞–ª–æ–≤ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é.",
                        parse_mode="HTML",
                        reply_markup=await create_channels_keyboard(user_id)
                    )
                else:
                    # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å
                    await message.answer(
                        f"üìå <b>–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª –∏–ª–∏ –≥—Ä—É–ø–ø—É</b>\n\n"
                        f"–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª "
                        f"–∏–ª–∏ –≥—Ä—É–ø–ø—É, –≥–¥–µ –±–æ—Ç –±—É–¥–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç.\n\n"
                        f"‚ö†Ô∏è –î–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Å –ø—Ä–∞–≤–∞–º–∏ "
                        f"–Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π.",
                        parse_mode="HTML",
                        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                            [InlineKeyboardButton(text="+ –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="add_channel")]
                        ])
                    )
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
                if existing_user.username != message.from_user.username or existing_user.full_name != message.from_user.full_name:
                    existing_user.username = message.from_user.username
                    existing_user.full_name = message.from_user.full_name
                    await session.commit()
                    
            else:
                # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º
                is_admin = str(user_id) == DEFAULT_ADMIN_ID
                
                new_user = User(
                    user_id=user_id,
                    username=message.from_user.username,
                    full_name=message.from_user.full_name,
                    role="admin" if is_admin else "account_owner",
                    is_active=True
                )
                
                session.add(new_user)
                await session.commit()
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await message.answer(
                    f"üåü <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Publicus!</b>\n\n"
                    f"–Ø ‚Äî –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Telegram-–∫–∞–Ω–∞–ª–∞—Ö –∏ –≥—Ä—É–ø–ø–∞—Ö.\n\n"
                    f"‚úèÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
                    f"‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤ –≤—Ä—É—á–Ω—É—é –∏ —Å –ø–æ–º–æ—â—å—é –ò–ò\n"
                    f"‚Ä¢ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
                    f"‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Google –¢–∞–±–ª–∏—Ü–∞–º–∏\n"
                    f"‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏\n\n"
                    f"üöÄ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É \"–ù–∞—á–∞—Ç—å\".",
                    parse_mode="HTML",
                    reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                        [InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å", callback_data="start_onboarding")]
                    ])
                )
                
                logger.info(f"New user registered: {user_id}, {message.from_user.username}")
                
    except Exception as e:
        logger.error(f"Error in /start command: {e}")
        await message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

async def create_channels_keyboard(user_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–∞–Ω–∞–ª–æ–≤/–≥—Ä—É–ø–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        channels_q = select(Group).filter(Group.added_by == user_id)
        channels_result = await session.execute(channels_q)
        channels = channels_result.scalars().all()
        
        # –°–æ–∑–¥–∞–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = []
        for channel in channels:
            display_text = f"{'–∫–∞–Ω–∞–ª' if channel.type == 'channel' else '–≥—Ä—É–ø–ø–∞'} {channel.display_name or channel.title}"
            keyboard.append([InlineKeyboardButton(text=display_text, callback_data=f"select_channel_{channel.id}")])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        keyboard.append([InlineKeyboardButton(text="+ –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="add_channel")])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
